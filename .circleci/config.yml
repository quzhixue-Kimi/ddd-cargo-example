version: 2.1

jobs:
  build:
    docker:
      - image: circleci/openjdk:8u242-jdk
    steps:
      - checkout
      - run:
          name: build service
          command: |
            curl -s -u ${CIRCLE_TOKEN}: -d build_parameters[CIRCLE_JOB]=ddd-cargo-example https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH
  ddd-cargo-example:
    docker:
      - image: circleci/openjdk:8u242-jdk
    working_directory: ~/ddd-cargo-example
    steps:
      - build-service:
          service-name: "ddd-cargo-example"

commands:
  build-service:
    description: "Build a service and push image to dockerhub"
    parameters:
      service-name:
        type: string
    steps:
      # git pull
      - checkout:
          path: ~/ddd-cargo-example

      - setup_remote_docker

      - run:
          name: Login to Dockerhub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS

      # Download and cache dependencies
      - restore_cache:
          keys:
            - << parameters.service-name >>-{{ checksum "pom.xml"}}

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: << parameters.service-name >>-{{ checksum "pom.xml"}}

      # package into a jar and build image
      - run: mvn clean package dockerfile:build dockerfile:push -Ddockerfile.maven.settings.auth=false -Ddocker.image.tag=Build-${CIRCLE_BUILD_NUM}-CI

      # store raw content of src code
      - store_artifacts:
          path: target/classes
          destination: ddd-cargo-example-<< parameters.service-name >>
